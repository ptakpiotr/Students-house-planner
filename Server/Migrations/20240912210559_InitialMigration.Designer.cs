// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240912210559_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Server.Models.BathroomEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MonthId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MonthId");

                    b.HasIndex("UserId");

                    b.ToTable("BathroomEntries");
                });

            modelBuilder.Entity("Server.Models.KitchenEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MonthId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MonthId");

                    b.HasIndex("UserId");

                    b.ToTable("KitchenEntries");
                });

            modelBuilder.Entity("Server.Models.MonthModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("Server.Models.ShoppingEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Confirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("MonthId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MonthId");

                    b.HasIndex("PersonId");

                    b.ToTable("ShoppingEntries");
                });

            modelBuilder.Entity("Server.Models.BathroomEntry", b =>
                {
                    b.HasOne("Server.Models.MonthModel", "Month")
                        .WithMany("BathroomEntries")
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.AppUser", "User")
                        .WithMany("BathroomEntries")
                        .HasForeignKey("UserId");

                    b.Navigation("Month");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server.Models.KitchenEntry", b =>
                {
                    b.HasOne("Server.Models.MonthModel", "Month")
                        .WithMany("KitchenEntries")
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.AppUser", "User")
                        .WithMany("KitchenEntries")
                        .HasForeignKey("UserId");

                    b.Navigation("Month");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server.Models.ShoppingEntry", b =>
                {
                    b.HasOne("Server.Models.MonthModel", "Month")
                        .WithMany("ShoppingEntries")
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.AppUser", "Person")
                        .WithMany("ShoppingEntries")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Month");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Server.Models.AppUser", b =>
                {
                    b.Navigation("BathroomEntries");

                    b.Navigation("KitchenEntries");

                    b.Navigation("ShoppingEntries");
                });

            modelBuilder.Entity("Server.Models.MonthModel", b =>
                {
                    b.Navigation("BathroomEntries");

                    b.Navigation("KitchenEntries");

                    b.Navigation("ShoppingEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
